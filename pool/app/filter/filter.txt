type single
type multi

type _ val' =
  | Str : string -> single val'
  | Nr : float -> single val'
  | Bool : bool -> single val'
  | Date : Ptime.t -> single val'
  | Empty : single val'
  | Lst : 'a list -> multi val'

type key = string

type _ operator =
  | Less : single operator
  | LessEqual : single operator
  | Greater : single operator
  | GreaterEqual : single operator
  | Equal : single operator
  | NotEqual : single operator
  | ContainsSome : multi operator
  | ContainsNone : multi operator
  | ContainsAll : multi operator

type 'a predicate = key * 'a operator * 'a val'

type filter =
  | And of filter * filter
  | Or of filter * filter
  | Not of filter
  | PredS of single predicate
  | PredM of multi predicate

val ( <&> ) : filter -> filter -> filter
val ( <|> ) : filter -> filter -> filter
val ( <.> ) : filter -> filter
